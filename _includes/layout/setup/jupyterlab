{%- assign jl = include.jl %}
{%- if jl.kernel %}
1. **Setup the kernel for JupyterLab.** You will create a kernel called {{ jl.kernel.name | default: jl.kernel }} to access from JupyterLab Server. Run the following commands to activate the workshop's virtual environment and create a new kernelspec from it:
  ```
{%-if jl.kernel.source %}source /project/scinet_workshop1/intro_ml/intro_ml_env/bin/activate{%- endif %}
ipython kernel install --name={{ jl.kernel.name | default: jl.kernel }} --user
```
1. **Stop the interactive job** on the compute node by running the command:
  ```
exit
```
{%- endif %}
1. **Launch a JupyterLab Server session.** Under the Interactive Apps menu, select JupyterLab Server. Specify the following input values on the page: {% include layout/setup/paramloop paramloop=jl app="JupyterLab" %}
{%- if jl.notebook %}
1. {% include layout/setup/ipynb file=jl.notebook folder=folder path=setup.path %}
{%- endif %}
{%- if jl.kernel %}
1. **Select the kernel** for this JupyterLab session. Once you are in JupyterLab with this notebook open, select your kernel by clicking on the Switch kernel button in the top right corner of the editor. A pop-up will appear with a dropdown menu containing the {{ jl.kernel.name | default: jl.kernel }} kernel we made above. Click on the kernel and click the "Select" button.
{%- endif %}
{%- if jl.import %}
1. **Import the required packages** for this tutorial. You can run the following lines in the python console:
  ```python
  {%- for _i in jl.import %}
  {{ _i }}
  {%- endfor %}
  ```
{%- endif %}