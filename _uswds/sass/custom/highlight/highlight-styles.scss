@use "uswds-core" as *;
@use "usa-accordion" as accord;


// color functions

@function highlight-bg($spec, $colval){
    $holdcolor: if($spec != "base", "#{$colval}-#{$spec}", "#{$colval}");
    
    @return $holdcolor;
}
@function highlight-border($spec, $colval){
  @if $spec == "base" {
    @return "#{$colval}-dark";
  } @else if $spec == "dark" {
    @return "#{$colval}-darker";; 
  } @else {
    @return  "#{$colval}";
  };
}
  
// Base highlight styles
@mixin highlighted-styles {
    $bgcolor: "base-lighter";
    $banner-text-color-token: get-color-token-from-bg(
      $bgcolor,
      $theme-alert-text-reverse-color,
      $theme-alert-text-color,
      $context: "Highlight (default)"
    );
  
    background-color: color($bgcolor);
    border-left: units($theme-alert-bar-width) solid color("base");
    color: color($banner-text-color-token);
    @include u-shadow(2);
  
    .highlighted__body {
      position: relative;
      @include border-box-sizing;
      @include typeset($theme-alert-font-family);
      @include u-margin-x("auto");
      @include u-maxw($theme-site-alert-max-width);
      @include u-padding-y($theme-alert-padding-y);
      @include u-padding-x($theme-site-margins-mobile-width);
      @include at-media($theme-site-margins-breakpoint) {
        padding-left: 2 * $alert-icon-optical-adjust-left;
      }  
      p{
        @include u-margin-y(0);
      };

      h4, .highlighted__heading {
        margin-top: 0;
        margin-bottom: units(1);
        @include typeset($theme-alert-font-family, "lg", 1);
      };

      h5{
        margin-bottom: units(1);
        @include typeset($theme-alert-font-family, "md", 1);
      };
    }

}

//set status styles for highlight class
@mixin highlighted-status-styles($name, $colval, $spec) {
  
  $bgcolor: highlight-bg($spec, $colval);
  $bordercolor: highlight-border($spec, $colval);
  $barwidth: units($theme-alert-bar-width);
  $bordercolor-p: color($bordercolor);

  $banner-text-color-token: get-color-token-from-bg(
    $bgcolor,
    $theme-alert-text-reverse-color,
    $theme-alert-text-color,
    $context: "Highlight (#{$name})"
  );
  border-left: $barwidth solid $bordercolor-p;
  @include set-text-and-bg($bgcolor);
  
  @include u-padding-y($theme-alert-padding-y);
  @include u-padding-x($theme-site-margins-mobile-width);
  @include at-media($theme-site-margins-breakpoint) {
      padding-left: 2 * $alert-icon-optical-adjust-left;
  }
}


// Set status styles for highlight wrapper/background
@mixin highlighted-status-wrapper-styles($name, $colval, $spec) {
  $bgcolor: highlight-bg($spec, $colval);
  $bordercolor: highlight-border($spec, $colval);

  background-color: color($bgcolor);
  border-left: units($theme-alert-bar-width) solid color($bordercolor);
}
  
  
// Set status styles for highlight content
// added to __body element
@mixin highlighted-styles-other($name, $colval, $spec, $icon) {

  $bgcolor: highlight-bg($spec, $colval);

  $banner-text-color-token: get-color-token-from-bg(
    $bgcolor,
    $theme-alert-text-reverse-color,
    $theme-alert-text-color,
    $context: "Highlight (#{$name})"
  );
  padding-left: units($theme-alert-icon-size) + ($alert-icon-optical-adjust-left);
  
  @include add-alert-icon($icon, $banner-text-color-token, $bgcolor);
  @include set-text-and-bg($bgcolor);

  @include at-media($theme-site-margins-breakpoint) {
    padding-left: units($theme-site-margins-width) * 2;
    padding-right: units($theme-site-margins-width) * 2;
  }

  a {
    @include set-link-from-bg(
      $bgcolor,
      $theme-alert-link-reverse-color,
      $theme-alert-link-color,
      $context: "Highlight (#{$name})"
    );
  }
}
  
.highlighted{
  @include highlighted-styles;
  * + & {
    margin-top: units(2);
  };

}

// Variant - no icon
@mixin highlighted-no-icon {
  .highlighted__body {
    padding-left: units(
        $theme-site-margins-mobile-width
      ) !important;
    @include at-media($theme-site-margins-breakpoint) {
        padding-left: units($theme-site-margins-mobile-width) * 2 !important;
    }
    &:before {
      display: none !important;
    }
  }
};

.highlighted--no-icon {
@include highlighted-no-icon;
}


////////////////////////////////////
/// 
///   // Set status styles for accordion buttons

@function accord-button-bg($spec, $colval){
$holdcolor: if($spec == "lighter", "#{$colval}-light", "#{$colval}");

@return $holdcolor;
}
@function accord-button-hover($spec, $colval){
$holdcolor: if($spec != "dark", "#{$colval}-dark", "#{$colval}-darker");

@return $holdcolor;
}


// Opened styles
@mixin accordion-header-styles ($name, $colval, $spec) {
$bgcolor: accord-button-bg($spec, $colval);
$hovercolor: accord-button-hover($spec, $colval);
@include accord.accordion-button-styles;

@include set-text-and-bg(
  $bgcolor,
  $context: "(#{$name}) Accordion"
);
@include set-icon-from-bg(
  $bgcolor,
  "usa-icons/remove",
  "usa-icons-bg/remove--white"
);
&:hover {
  @include set-text-and-bg(
    $hovercolor,
    $context: "(#{$name}) Accordion"
  );
  @include set-icon-from-bg(
    $hovercolor,
    "usa-icons/remove",
    "usa-icons-bg/remove--white"
  );
}
}

@mixin accordion-header-unopened-styles  ($name, $colval, $spec) {
$bgcolor: accord-button-bg($spec, $colval);
$hovercolor: accord-button-hover($spec, $colval);
@include accord.accordion-button-unopened-styles;

@include set-icon-from-bg(
  $bgcolor,
  "usa-icons/add",
  "usa-icons-bg/add--white"
);

&:hover {
  @include set-icon-from-bg(
    $hovercolor,
    "usa-icons/add",
    "usa-icons-bg/add--white"
  );
}
}
  